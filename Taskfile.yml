# https://taskfile.dev

version: "3"

interval: 200ms

tasks:
  tools:
    desc: "Установить утилиты"
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@v3.44.0
      - go install github.com/a-h/templ/cmd/templ@v0.3.898
      - go install github.com/air-verse/air@v1.62.0
      - go install github.com/pressly/goose/v3/cmd/goose@v3.24.3

  tidy:
    desc: "Установить и проверить пакеты"
    cmds:
      - go mod tidy
      - go mod verify

  test:
    desc: "Запустить тесты"
    cmds:
      - go test -race -v ./...

  coverage:
    desc: "Запустить покрытие кода тестами"
    cmds:
      - go test ./... -coverprofile=cover.out
      - go tool cover -func=cover.out | grep total
      - go tool cover -html=cover.out -o cover.html

  db:migrate-reset:
    desc: "Сбросить миграции"
    cmds:
      - goose -dir ./internal/db/migrations postgres "{{ .DSN }}" reset

  db:migrate-up:
    desc: "Применить миграции"
    cmds:
      - goose -dir ./internal/db/migrations postgres "{{ .DSN }}" up

  db:migrate-down:
    desc: "Откатить последнюю миграцию"
    cmds:
      - goose -dir ./internal/db/migrations postgres "{{ .DSN }}" down

  db:migrate-status:
    desc: "Показать статус миграций"
    cmds:
      - goose -dir ./internal/db/migrations postgres "{{ .DSN }}" status

  db:update:
    desc: "Обновить БД и сгенерировать код sqlc"
    cmds:
      - task: db:migrate-up
      - task: sqlc:generate

  db:seed:
    desc: "Запустить сиды"
    cmds:
      - go run ./cmd/seeder/main.go

  sqlc:generate:
    desc: "Сгенерировать код с помощью sqlc"
    cmds:
      - sqlc generate -f ./internal/db/sqlc.yaml

  sqlc:validate:
    desc: "Проверить SQL-запросы на ошибки без генерации"
    cmds:
      - sqlc compile -f ./internal/db/sqlc.yaml

  templ:generate:
    desc: "Сгенерировать шаблоны"
    env:
      TEMPL_EXPERIMENT: rawgo
    generates:
      - "**/*_templ.go"
    sources:
      - "**/*.templ"
    cmds:
      - templ generate .

  reset-all:
    desc: "Полный reset с регенерацией"
    cmds:
      - task: tidy
      - task: sqlc:generate
      - task: templ:generate
      - task: db:migrate-reset
      - task: db:migrate-up
      - task: db:seed

  watch:
    desc: "Запустить в режиме разработки с hot-reload"
    cmds:
      - air -c .air.toml

  default:
    desc: "Запуск задач по умолчанию"
    deps:
      - watch
    silent: false
