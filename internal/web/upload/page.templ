package upload

import (
	"github.com/gitslim/go-ragger/internal/db/sqlc"
	"github.com/gitslim/go-ragger/internal/web/tpl"
	datastar "github.com/starfederation/datastar/sdk/go"
	"net/http"
)

type FileUploadSignals struct {
	FilesBase64 [][]string `json:"files"`
	FileMimes   [][]string `json:"filesMimes"`
	FileNames   [][]string `json:"filesNames"`
}

templ FileUploadView(signals *FileUploadSignals) {
	<div
		id="file_upload"
		data-signals={ templ.JSONString(signals) }
	>
		<a class="btn btn-link" href="/documents">К списку документов</a>
		<div class="mb-3 py-4">
			<input
				id="file_input"
				type="file"
				data-bind-files
				multiple
				class="form-control"
				accept="application/pdf,.pdf,application/vnd.openxmlformats-officedocument.wordprocessingml.document,.docx,application/msword,.doc,application/vnd.openxmlformats-officedocument.presentationml.presentation,.pptx,application/vnd.ms-powerpoint,.ppt,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,.xlsx,application/vnd.ms-excel,.xls,image/jpeg,.jpg,.jpeg,image/png,.png"
			/>
		</div>
		<button
			class="btn btn-primary"
			data-on-click={ datastar.PostSSE("/upload/upload") }
			data-show="!!$files?.length"
		>
			Загрузить
		</button>
	</div>
}

templ FileUpdateAlert(err error) {
	<div id="file_upload" class="alert alert-error">
		@tpl.Icon("material-symbols:error-icon")
		Error: { err.Error() }
	</div>
}

templ FileUploadResults(signals *FileUploadSignals) {
	<div id="file_upload">
		<div class="alert alert-info" role="alert">
			Документы загружены!
		</div>
		<a class="btn btn-link" href="/documents">К списку документов</a>
		<table class="table">
			<thead>
				<tr>
					<th>Имя</th>
					<th>Mimes</th>
				</tr>
			</thead>
			<tbody>
				for i := range signals.FileNames[0] {
					<tr>
						<td class="text-center">{ signals.FileNames[0][i] }</td>
						<td class="text-center">{ signals.FileMimes[0][i] }</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

templ PageFileUpload(r *http.Request, u *sqlc.User) {
	@tpl.Page(r, u) {
		<div
			id="file_upload"
			class="container"
			data-on-load="@get('/upload/data')"
			data-signals="{files: [], filesMimes: [], filesNames: []}"
		></div>
	}
}
